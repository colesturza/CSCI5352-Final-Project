%!PS-Adobe-3.0
%%Creator: cairo 1.14.12 (http://cairographics.org)
%%CreationDate: Thu Dec 10 18:22:37 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 1058x1058mm 3000 3000 0 () ()
%%BoundingBox: 0 0 3000 3000
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 1058x1058mm
%%PageBoundingBox: 0 0 3000 3000
3000 3000 cairo_set_page_size
%%EndPageSetup
q 0 0 3000 3000 rectclip q
1 g
0 0 3000 3000 rectfill
0.266667 g
1 w
0 J
0 j
[] 0.0 d
10 M 2983 1433.352 m 103.559 2632.723 l S
90.387 2638.207 m 105.34 2637 l 101.773 2628.441 l 90.387 2638.207 l f
2983 1433.352 m 2404.312 2940.742 l S
2399.199 2954.059 m 2408.641 2942.402 l 2399.984 2939.078 l 2399.199 2954.059
 l f
2983 1433.352 m 2063.527 2425.504 l S
2053.828 2435.965 m 2066.926 2428.652 l 2060.125 2422.352 l 2053.828 2435.965
 l f
2983 1433.352 m 1528.086 33.477 l S
1517.805 23.586 m 1524.871 36.816 l 1531.297 30.137 l 1517.805 23.586 l
 f
17 2668.773 m 2753.359 1529.004 l S
2766.527 1523.52 m 2751.578 1524.727 l 2755.141 1533.281 l 2766.527 1523.52
 l f
17 2668.773 m 2343.215 2977.055 l S
2357.359 2978.926 m 2343.824 2972.457 l 2342.605 2981.648 l 2357.359 2978.926
 l f
17 2668.773 m 2025.426 2444.723 l S
2039.605 2443.141 m 2024.91 2440.117 l 2025.941 2449.332 l 2039.605 2443.141
 l f
17 2668.773 m 1499.293 37.707 l S
1506.297 25.277 m 1495.254 35.43 l 1503.332 39.98 l 1506.297 25.277 l f
2388.09 2983 m 2893.844 1665.59 l S
2898.957 1652.273 m 2889.516 1663.93 l 2898.172 1667.254 l 2898.957 1652.273
 l f
2388.09 2983 m 109.953 2681.094 l S
95.812 2679.219 m 109.344 2685.688 l 110.562 2676.5 l 95.812 2679.219 l
 f
2388.09 2983 m 2060.168 2461.473 l S
2052.574 2449.395 m 2056.246 2463.941 l 2064.094 2459.004 l 2052.574 2449.395
 l f
2388.09 2983 m 1517.699 39.789 l S
1513.652 26.109 m 1513.254 41.105 l 1522.145 38.477 l 1513.652 26.109 l
 f
2048.051 2442.199 m 2813.906 1615.812 l S
2823.602 1605.348 m 2810.508 1612.66 l 2817.305 1618.961 l 2823.602 1605.348
 l f
2048.051 2442.199 m 110.188 2658.379 l S
96.012 2659.961 m 110.703 2662.984 l 109.676 2653.773 l 96.012 2659.961
 l f
2048.051 2442.199 m 2363.996 2944.68 l S
2371.586 2956.758 m 2367.918 2942.211 l 2360.07 2947.148 l 2371.586 2956.758
 l f
2048.051 2442.199 m 1516.098 40.203 l S
1513.012 26.273 m 1511.57 41.207 l 1520.625 39.203 l 1513.012 26.273 l f
1510.961 17 m 2803.738 1260.871 l S
2814.02 1270.762 m 2806.953 1257.531 l 2800.523 1264.211 l 2814.02 1270.762
 l f
1510.961 17 m 63.023 2587.082 l S
56.023 2599.512 m 67.062 2589.355 l 58.984 2584.805 l 56.023 2599.512 l
 f
1510.961 17 m 2375.25 2939.594 l S
2379.297 2953.273 m 2379.695 2938.277 l 2370.809 2940.906 l 2379.297 2953.273
 l f
1510.961 17 m 2043.129 2419.973 l S
2046.215 2433.902 m 2047.656 2418.969 l 2038.602 2420.977 l 2046.215 2433.902
 l f
1 0 0 rg
3217.5 1433.352 m 3217.5 1303.84 3112.512 1198.852 2983 1198.852 c 2853.488
 1198.852 2748.5 1303.84 2748.5 1433.352 c 2748.5 1562.863 2853.488 1667.852
 2983 1667.852 c 3112.512 1667.852 3217.5 1562.863 3217.5 1433.352 c f
0 g
3217.5 1433.352 m 3217.5 1303.84 3112.512 1198.852 2983 1198.852 c 2853.488
 1198.852 2748.5 1303.84 2748.5 1433.352 c 2748.5 1562.863 2853.488 1667.852
 2983 1667.852 c 3112.512 1667.852 3217.5 1562.863 3217.5 1433.352 c S
0 1 0 rg
96.5 2668.773 m 96.5 2624.867 60.906 2589.273 17 2589.273 c -26.906 2589.273
 -62.5 2624.867 -62.5 2668.773 c -62.5 2712.68 -26.906 2748.273 17 2748.273
 c 60.906 2748.273 96.5 2712.68 96.5 2668.773 c f
0 g
96.5 2668.773 m 96.5 2624.867 60.906 2589.273 17 2589.273 c -26.906 2589.273
 -62.5 2624.867 -62.5 2668.773 c -62.5 2712.68 -26.906 2748.273 17 2748.273
 c 60.906 2748.273 96.5 2712.68 96.5 2668.773 c S
0 0 1 rg
2419.09 2983 m 2419.09 2965.879 2405.211 2952 2388.09 2952 c 2370.969 2952
 2357.09 2965.879 2357.09 2983 c 2357.09 3000.121 2370.969 3014 2388.09 
3014 c 2405.211 3014 2419.09 3000.121 2419.09 2983 c f
0 g
2419.09 2983 m 2419.09 2965.879 2405.211 2952 2388.09 2952 c 2370.969 2952
 2357.09 2965.879 2357.09 2983 c 2357.09 3000.121 2370.969 3014 2388.09 
3014 c 2405.211 3014 2419.09 3000.121 2419.09 2983 c S
1 0.647059 0 rg
2056.551 2442.199 m 2056.551 2437.504 2052.746 2433.699 2048.051 2433.699
 c 2043.355 2433.699 2039.551 2437.504 2039.551 2442.199 c 2039.551 2446.895
 2043.355 2450.699 2048.051 2450.699 c 2052.746 2450.699 2056.551 2446.895
 2056.551 2442.199 c f
0 g
2056.551 2442.199 m 2056.551 2437.504 2052.746 2433.699 2048.051 2433.699
 c 2043.355 2433.699 2039.551 2437.504 2039.551 2442.199 c 2039.551 2446.895
 2043.355 2450.699 2048.051 2450.699 c 2052.746 2450.699 2056.551 2446.895
 2056.551 2442.199 c S
1 0.752941 0.796078 rg
1520.461 17 m 1520.461 11.754 1516.207 7.5 1510.961 7.5 c 1505.711 7.5 
1501.461 11.754 1501.461 17 c 1501.461 22.246 1505.711 26.5 1510.961 26.5
 c 1516.207 26.5 1520.461 22.246 1520.461 17 c f
0 g
1520.461 17 m 1520.461 11.754 1516.207 7.5 1510.961 7.5 c 1505.711 7.5 
1501.461 11.754 1501.461 17 c 1501.461 22.246 1505.711 26.5 1510.961 26.5
 c 1516.207 26.5 1520.461 22.246 1520.461 17 c S
Q Q
showpage
%%Trailer
%%EOF
